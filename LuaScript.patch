 src/Dialogs/LuaConsole.h   |  4 ++++
 src/NppIFaceTable.cpp      | 10 +++++-----
 src/SciTE/LuaExtension.cpp | 10 +++++-----
 3 files changed, 14 insertions(+), 10 deletions(-)

diff --git a/src/Dialogs/LuaConsole.h b/src/Dialogs/LuaConsole.h
index 9c395a5..2f1ab19 100644
--- a/src/Dialogs/LuaConsole.h
+++ b/src/Dialogs/LuaConsole.h
@@ -21,9 +21,13 @@
 #include "ConsoleDialog.h"
 #include "LuaExtension.h"
 #include "PluginInterface.h"
+#include "dockingResource.h"
 
 #include "lua.hpp"
 
+#define SCI_UNUSED 0
+const wchar_t NPP_PLUGIN_NAME[] = TEXT("LuaScript");
+
 class LuaConsole final {
 public:
 	explicit LuaConsole(HWND hNotepad);
diff --git a/src/NppIFaceTable.cpp b/src/NppIFaceTable.cpp
index 457f740..3e0cba2 100644
--- a/src/NppIFaceTable.cpp
+++ b/src/NppIFaceTable.cpp
@@ -73,7 +73,7 @@ static std::vector<IFaceConstant> ifaceConstants = {
 	{ "IDM_EDIT_REDO", IDM_EDIT_REDO },
 	{ "IDM_EDIT_REMOVEEMPTYLINES", IDM_EDIT_REMOVEEMPTYLINES },
 	{ "IDM_EDIT_REMOVEEMPTYLINESWITHBLANK", IDM_EDIT_REMOVEEMPTYLINESWITHBLANK },
-	{ "IDM_EDIT_REMOVE_DUP_LINES", IDM_EDIT_REMOVE_DUP_LINES },
+//	{ "IDM_EDIT_REMOVE_DUP_LINES", IDM_EDIT_REMOVE_DUP_LINES },
 	{ "IDM_EDIT_RMV_TAB", IDM_EDIT_RMV_TAB },
 	{ "IDM_EDIT_RTL", IDM_EDIT_RTL },
 	{ "IDM_EDIT_SEARCHONINTERNET", IDM_EDIT_SEARCHONINTERNET },
@@ -192,7 +192,7 @@ static std::vector<IFaceConstant> ifaceConstants = {
 	{ "IDM_FORMAT_WIN_1257", IDM_FORMAT_WIN_1257 },
 	{ "IDM_FORMAT_WIN_1258", IDM_FORMAT_WIN_1258 },
 	{ "IDM_FORUM", IDM_FORUM },
-	{ "IDM_HELP", IDM_HELP },
+//	{ "IDM_HELP", IDM_HELP },
 	{ "IDM_HOMESWEETHOME", IDM_HOMESWEETHOME },
 	{ "IDM_LANGSTYLE_CONFIG_DLG", IDM_LANGSTYLE_CONFIG_DLG },
 	{ "IDM_LANG_ADA", IDM_LANG_ADA },
@@ -376,9 +376,9 @@ static std::vector<IFaceConstant> ifaceConstants = {
 	{ "IDM_VIEW_DRAWTABBAR_MULTILINE", IDM_VIEW_DRAWTABBAR_MULTILINE },
 	{ "IDM_VIEW_DRAWTABBAR_TOPBAR", IDM_VIEW_DRAWTABBAR_TOPBAR },
 	{ "IDM_VIEW_DRAWTABBAR_VERTICAL", IDM_VIEW_DRAWTABBAR_VERTICAL },
-	{ "IDM_VIEW_EDGEBACKGROUND", IDM_VIEW_EDGEBACKGROUND },
-	{ "IDM_VIEW_EDGELINE", IDM_VIEW_EDGELINE },
-	{ "IDM_VIEW_EDGENONE", IDM_VIEW_EDGENONE },
+//	{ "IDM_VIEW_EDGEBACKGROUND", IDM_VIEW_EDGEBACKGROUND },
+//	{ "IDM_VIEW_EDGELINE", IDM_VIEW_EDGELINE },
+//	{ "IDM_VIEW_EDGENONE", IDM_VIEW_EDGENONE },
 	{ "IDM_VIEW_EOL", IDM_VIEW_EOL },
 	{ "IDM_VIEW_FILEBROWSER", IDM_VIEW_FILEBROWSER },
 	{ "IDM_VIEW_FILESWITCHER_PANEL", IDM_VIEW_FILESWITCHER_PANEL },
diff --git a/src/SciTE/LuaExtension.cpp b/src/SciTE/LuaExtension.cpp
index 7a17b56..861521b 100644
--- a/src/SciTE/LuaExtension.cpp
+++ b/src/SciTE/LuaExtension.cpp
@@ -285,7 +285,7 @@ static int cf_npp_add_callback_single(lua_State *L) {
 	}
 
 	// Get the length of the table
-	size_t len = lua_rawlen(L, -1);
+	lua_Unsigned len = lua_rawlen(L, -1);
 
 	lua_pushvalue(L, -3); // copy the callback function to the top of the stack
 	lua_seti(L, -2, len + 1);
@@ -303,7 +303,7 @@ static int cf_npp_add_callback(lua_State *L) {
 		cf_npp_add_callback_single(L);
 	}
 	else {
-		size_t len = lua_rawlen(L, 1);
+		lua_Unsigned len = lua_rawlen(L, 1);
 
 		if (len == 0)
 			luaL_argerror(L, 1, "non-empty array required");
@@ -559,7 +559,7 @@ static int cf_npp_add_shortcut(lua_State *L) {
 	}
 
 	// Get the length of the table
-	size_t len = lua_rawlen(L, -1);
+	lua_Unsigned len = lua_rawlen(L, -1);
 	lua_pushvalue(L, 3); // the function
 	lua_seti(L, -2, len + 1);
 
@@ -785,7 +785,7 @@ static int cf_match_replace(lua_State *L) {
 
 	host->Send(pmo->pane, SCI_SETTARGETSTART, pmo->startPos, 0);
 	host->Send(pmo->pane, SCI_SETTARGETEND, pmo->endPos, 0);
-	host->Send(pmo->pane, SCI_REPLACETARGET, lua_rawlen(L, 2), SptrFromString(replacement));
+	host->Send(pmo->pane, SCI_REPLACETARGET, (uptr_t)lua_rawlen(L, 2), SptrFromString(replacement));
 	pmo->endPos = static_cast<int>(host->Send(pmo->pane, SCI_GETTARGETEND, 0, 0));
 	return 0;
 }
@@ -1799,7 +1799,7 @@ bool LuaExtension::OnExecute(const char *s) {
 				lua_getglobal(luaState, "print");
 				lua_insert(luaState, 1);
 				if (lua_pcall(luaState, lua_gettop(luaState) - 1, 0, 0) != 0)
-					host->TraceError("error calling " LUA_QL("print"));
+					host->TraceError("error calling " "'print'");
 			}
 			// else everything finished fine but had no return value
 		}
